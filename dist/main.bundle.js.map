{"version":3,"sources":["C:/Angular-Datatable/src/$_lazy_route_resource lazy","C:/Angular-Datatable/src/app/app.component.css","C:/Angular-Datatable/src/app/app.component.html","C:/Angular-Datatable/src/app/app.component.ts","C:/Angular-Datatable/src/app/app.module.ts","C:/Angular-Datatable/src/app/combined/combined.component.css","C:/Angular-Datatable/src/app/combined/combined.component.html","C:/Angular-Datatable/src/app/combined/combined.component.ts","C:/Angular-Datatable/src/app/default/default.component.css","C:/Angular-Datatable/src/app/default/default.component.html","C:/Angular-Datatable/src/app/default/default.component.ts","C:/Angular-Datatable/src/app/routes.ts","C:/Angular-Datatable/src/app/service/data-service.service.ts","C:/Angular-Datatable/src/app/withfiltering/withfiltering.component.css","C:/Angular-Datatable/src/app/withfiltering/withfiltering.component.html","C:/Angular-Datatable/src/app/withfiltering/withfiltering.component.ts","C:/Angular-Datatable/src/app/withpagination/withpagination.component.css","C:/Angular-Datatable/src/app/withpagination/withpagination.component.html","C:/Angular-Datatable/src/app/withpagination/withpagination.component.ts","C:/Angular-Datatable/src/app/withsorting/withsorting.component.css","C:/Angular-Datatable/src/app/withsorting/withsorting.component.html","C:/Angular-Datatable/src/app/withsorting/withsorting.component.ts","C:/Angular-Datatable/src/environments/environment.ts","C:/Angular-Datatable/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<mat-toolbar color=\\\"accent\\\">\\n    <span>Manav Pandya - C#Corner</span>\\n    <span class=\\\"demo-toolbar\\\"></span>\\n    <button mat-button href=\\\"www.asp-dotnet-mvc-tutorials.blogspot.in\\\">Go To My Blog</button>\\n    <button mat-button [matMenuTriggerFor]=\\\"menu\\\">Select Table From Below Menu</button>\\n    <mat-menu #menu=\\\"matMenu\\\">\\n        <button [routerLink]=\\\"['/Default']\\\" mat-menu-item>Default DataTable</button>\\n        <button [routerLink]=\\\"['/WithPagination']\\\" mat-menu-item>Table With Pagination</button>\\n        <button [routerLink]=\\\"['/WithFiltering']\\\" mat-menu-item>Table With Filtering</button>\\n        <button [routerLink]=\\\"['/WithSorting']\\\" mat-menu-item>Table With Sorting</button>\\n        <button [routerLink]=\\\"['/Combined']\\\" mat-menu-item>Combined DataTable</button>\\n    </mat-menu>\\n</mat-toolbar>\\n\\n<router-outlet>\\n</router-outlet>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Angular-Datatable/src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { MatToolbarModule , MatMenuModule , MatInputModule , MatTableModule ,MatButtonModule,MatCardModule,MatTableDataSource,MatPaginatorModule,MatSortModule} from '@angular/material';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { routing } from './routes';\nimport { HttpModule }    from '@angular/http';\nimport { AppComponent } from './app.component';\nimport { WithpaginationComponent } from './withpagination/withpagination.component';\nimport { WithfilteringComponent } from './withfiltering/withfiltering.component';\nimport { WithsortingComponent } from './withsorting/withsorting.component';\nimport { CombinedComponent } from './combined/combined.component';\nimport { DefaultComponent } from './default/default.component';\nimport { DataServiceService } from './service/data-service.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    WithpaginationComponent,\n    WithfilteringComponent,\n    WithsortingComponent,\n    CombinedComponent,\n    DefaultComponent\n  ],\n  imports: [\n    HttpModule,\n    routing,\n    BrowserAnimationsModule,\n    BrowserModule,\n    MatToolbarModule , MatMenuModule , MatInputModule , MatTableModule ,MatButtonModule,MatCardModule,MatPaginatorModule,MatSortModule\n  ],\n  exports:[\n    MatToolbarModule , MatMenuModule , MatInputModule , MatTableModule ,MatButtonModule,MatCardModule,MatPaginatorModule,MatSortModule\n  ],\n  providers: [DataServiceService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// C:/Angular-Datatable/src/app/app.module.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/app/combined/combined.component.css\n// module id = ../../../../../src/app/combined/combined.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n    <div class=\\\"alert alert-info\\\">\\n        <strong>Combined Angular DataTable Demo With All Functionality</strong>\\n    </div>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <div class=\\\"\\\">\\n            <mat-form-field style=\\\"width: 98%;\\\">\\n                <input matInput (keyup)=\\\"Filter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n            </mat-form-field>\\n        </div>\\n        <mat-table #Table [dataSource]=\\\"MyDataSource\\\" matSort>\\n\\n            <!-- For ID -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.id}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For User ID -->\\n            <ng-container matColumnDef=\\\"userId\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> User ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.userId}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Title -->\\n            <ng-container matColumnDef=\\\"title\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Title </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.title}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Completion Status -->\\n            <ng-container matColumnDef=\\\"completed\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Completion Status</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.completed}} </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n\\n        <!-- To paginate between pages with search -->\\n        <mat-paginator #paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\">\\n        </mat-paginator>\\n    </div>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/app/combined/combined.component.html\n// module id = ../../../../../src/app/combined/combined.component.html\n// module chunks = main","import { Component, OnInit ,ViewChild} from '@angular/core';\nimport { MatTableDataSource,MatPaginator,MatSort } from '@angular/material';\nimport { DataServiceService } from '../service/data-service.service';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-combined',\n  templateUrl: './combined.component.html',\n  styleUrls: ['./combined.component.css']\n})\nexport class CombinedComponent implements OnInit {\n\n  MyDataSource: any;\n  displayedColumns = ['id', 'userId','title','completed'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public dataService: DataServiceService) { }\n\n  ngOnInit() {\n    this.RenderDataTable();\n  }\n\n  RenderDataTable() {\n    this.dataService.GetAllTodos()\n      .subscribe(\n      res => {\n        this.MyDataSource = new MatTableDataSource();\n        this.MyDataSource.data = res;\n        this.MyDataSource.sort = this.sort;\n        this.MyDataSource.paginator = this.paginator;\n        console.log(this.MyDataSource.data);\n      },\n      error => {\n        console.log('There was an error while retrieving Todos !!!' + error);\n      });\n  }\n\n  Filter(searchstring:string)\n  {\n    searchstring = searchstring.trim(); \n    searchstring = searchstring.toLowerCase();\n    this.MyDataSource.filter = searchstring;\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Angular-Datatable/src/app/combined/combined.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/app/default/default.component.css\n// module id = ../../../../../src/app/default/default.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n    <div class=\\\"alert alert-info\\\">\\n        <strong>Simple Angular Material DataTable</strong>\\n    </div>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <mat-table #Table [dataSource]=\\\"MyDataSource\\\">\\n\\n            <!-- For ID -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.id}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For User ID -->\\n            <ng-container matColumnDef=\\\"userId\\\">\\n                <mat-header-cell *matHeaderCellDef> User ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.userId}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Title -->\\n            <ng-container matColumnDef=\\\"title\\\">\\n                <mat-header-cell *matHeaderCellDef> Title </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.title}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Body -->\\n            <ng-container matColumnDef=\\\"body\\\">\\n                <mat-header-cell *matHeaderCellDef> Body Text </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.body}} </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n    </div>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/app/default/default.component.html\n// module id = ../../../../../src/app/default/default.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { MatTableDataSource } from '@angular/material';\nimport { DataServiceService } from '../service/data-service.service';\nimport { MatSort } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-default',\n  templateUrl: './default.component.html',\n  styleUrls: ['./default.component.css']\n})\nexport class DefaultComponent implements OnInit {\n\n  MyDataSource: any;\n  displayedColumns = ['id', 'userId','title','body'];\n\n  constructor(public dataService: DataServiceService) { }\n\n  ngOnInit() {\n    this.RenderDataTable();\n  }\n\n  RenderDataTable() {\n    this.dataService.GetAllRecords()\n      .subscribe(\n      res => {\n        this.MyDataSource = new MatTableDataSource();\n        this.MyDataSource.data = res;\n        console.log(this.MyDataSource.data);\n      },\n      error => {\n        console.log('There was an error while retrieving Posts !!!' + error);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Angular-Datatable/src/app/default/default.component.ts","import { ModuleWithProviders } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AppComponent } from './app.component';\r\nimport { CombinedComponent } from './combined/combined.component';\r\nimport { WithfilteringComponent } from './withfiltering/withfiltering.component';\r\nimport { WithpaginationComponent } from './withpagination/withpagination.component';\r\nimport { WithsortingComponent } from './withsorting/withsorting.component';\r\nimport { DefaultComponent } from './default/default.component';\r\n\r\nconst appRoutes: Routes = [\r\n    { path: '', redirectTo: 'Default', pathMatch: 'full' },\r\n    { path: 'Default', component: DefaultComponent },\r\n    { path: 'WithPagination', component: WithpaginationComponent },\r\n    { path: 'WithFiltering', component: WithfilteringComponent },\r\n    { path: 'WithSorting', component: WithsortingComponent },\r\n    { path: 'Combined', component: CombinedComponent }\r\n\r\n];\r\n\r\nexport const routing: ModuleWithProviders = RouterModule.forRoot(appRoutes);\n\n\n// WEBPACK FOOTER //\n// C:/Angular-Datatable/src/app/routes.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport { Observer } from 'rxjs/Observer';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/toPromise';\nimport 'rxjs/add/observable/throw';\n\n@Injectable()\nexport class DataServiceService {\n\n  private headers = new Headers({ 'Content-Type': 'application/json' });\n  _baseUrl: string = '';\n\n  // For Using Fake API by Using It's URL\n  constructor(private http: Http) {\n    this._baseUrl = \"https://jsonplaceholder.typicode.com/\";\n  }\n\n  // To fill the Datatable for Default Table [Dummy Data]\n  public GetAllRecords() {\n    return this.http.get(this._baseUrl + 'posts')\n      .map((res: Response) => {\n        return res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // To fill the Datatable with Comments [Dummy Data]\n  public GetAllComments() {\n    return this.http.get(this._baseUrl + 'comments')\n      .map((res: Response) => {\n        return res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // To fill the Datatable with Photos [Dummy Data]\n  public GetAllPhotos() {\n    return this.http.get(this._baseUrl + 'albums/1/photos')\n      .map((res: Response) => {\n        return res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // To fill the Datatable with Albums [Dummy Data]\n  public GetAllAlbums() {\n    return this.http.get(this._baseUrl + 'albums')\n      .map((res: Response) => {\n        return res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // To fill the Datatable with Todos [Dummy Data]\n  public GetAllTodos() {\n    return this.http.get(this._baseUrl + 'todos')\n      .map((res: Response) => {\n        return res.json();\n      })\n      .catch(this.handleError);\n  }\n\n  // To provide error description - Manav\n  private handleError(error: Response | any) {\n    console.error(error.message || error);\n    return Observable.throw(error.status);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Angular-Datatable/src/app/service/data-service.service.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/app/withfiltering/withfiltering.component.css\n// module id = ../../../../../src/app/withfiltering/withfiltering.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n    <div class=\\\"alert alert-info\\\">\\n        <strong>Angular Material DataTable With Filtering</strong>\\n    </div>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <div class=\\\"\\\">\\n            <mat-form-field style=\\\"width: 98%;\\\">\\n                <input matInput (keyup)=\\\"Filter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n            </mat-form-field>\\n        </div>\\n        <mat-table #Table [dataSource]=\\\"MyDataSource\\\">\\n\\n            <!-- For ID -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.id}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Post ID -->\\n            <ng-container matColumnDef=\\\"postId\\\">\\n                <mat-header-cell *matHeaderCellDef> Post ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.postId}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Name -->\\n            <ng-container matColumnDef=\\\"name\\\">\\n                <mat-header-cell *matHeaderCellDef> Name </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.name}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Email ID -->\\n            <ng-container matColumnDef=\\\"email\\\">\\n                <mat-header-cell *matHeaderCellDef> Email ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.email}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Body -->\\n            <ng-container matColumnDef=\\\"body\\\">\\n                <mat-header-cell *matHeaderCellDef> Body Text</mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.body}} </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n\\n        <!-- To paginate between pages with search -->\\n        <mat-paginator #paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\">\\n        </mat-paginator>\\n    </div>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/app/withfiltering/withfiltering.component.html\n// module id = ../../../../../src/app/withfiltering/withfiltering.component.html\n// module chunks = main","import { Component, OnInit ,ViewChild} from '@angular/core';\nimport { MatTableDataSource,MatPaginator } from '@angular/material';\nimport { DataServiceService } from '../service/data-service.service';\nimport { MatSort } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-withfiltering',\n  templateUrl: './withfiltering.component.html',\n  styleUrls: ['./withfiltering.component.css']\n})\nexport class WithfilteringComponent implements OnInit {\n\n  MyDataSource: any;\n  displayedColumns = ['id', 'postId','name','email','body'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  constructor(public dataService: DataServiceService) { }\n\n  ngOnInit() {\n    this.RenderDataTable();\n  }\n\n  RenderDataTable() {\n    this.dataService.GetAllComments()\n      .subscribe(\n      res => {\n        this.MyDataSource = new MatTableDataSource();\n        this.MyDataSource.data = res;\n        this.MyDataSource.paginator = this.paginator;\n        console.log(this.MyDataSource.data);\n      },\n      error => {\n        console.log('There was an error while retrieving Comments !!!' + error);\n      });\n  }\n\n  Filter(searchstring:string)\n  {\n    searchstring = searchstring.trim(); \n    searchstring = searchstring.toLowerCase();\n    this.MyDataSource.filter = searchstring;\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Angular-Datatable/src/app/withfiltering/withfiltering.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/app/withpagination/withpagination.component.css\n// module id = ../../../../../src/app/withpagination/withpagination.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n    <div class=\\\"alert alert-info\\\">\\n        <strong>Angular Material DataTable With Pagination</strong>\\n    </div>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <mat-table #Table [dataSource]=\\\"MyDataSource\\\">\\n\\n            <!-- For ID -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n                <mat-header-cell *matHeaderCellDef> ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.id}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Album ID -->\\n            <ng-container matColumnDef=\\\"albumId\\\">\\n                <mat-header-cell *matHeaderCellDef> Album ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.albumId}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Title -->\\n            <ng-container matColumnDef=\\\"title\\\">\\n                <mat-header-cell *matHeaderCellDef> Title </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.title}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Image -->\\n            <ng-container matColumnDef=\\\"url\\\">\\n                <mat-header-cell *matHeaderCellDef> Image </mat-header-cell>\\n                <mat-cell style=\\\"text-align: center;\\\" *matCellDef=\\\"let post\\\">\\n                    <img class=\\\"img-rounded\\\" src={{post.url}}/>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Thumbnail Photo -->\\n            <ng-container matColumnDef=\\\"thumbnailUrl\\\">\\n                <mat-header-cell *matHeaderCellDef> Thumbnail </mat-header-cell>\\n                <mat-cell style=\\\"text-align: center;\\\" *matCellDef=\\\"let post\\\">\\n                    <img class=\\\"img-rounded\\\" src={{post.thumbnailUrl}}/>\\n                </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n\\n        <!-- To use pagination in DataTable  -->\\n\\n        <mat-paginator #paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\">\\n        </mat-paginator>\\n    </div>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/app/withpagination/withpagination.component.html\n// module id = ../../../../../src/app/withpagination/withpagination.component.html\n// module chunks = main","import { Component, OnInit ,ViewChild} from '@angular/core';\nimport { MatTableDataSource , MatPaginator } from '@angular/material';\nimport { DataServiceService } from '../service/data-service.service';\nimport { MatSort } from '@angular/material';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-withpagination',\n  templateUrl: './withpagination.component.html',\n  styleUrls: ['./withpagination.component.css']\n})\nexport class WithpaginationComponent implements OnInit {\n\n  MyDataSource: any;\n  displayedColumns = ['id', 'albumId','title','url','thumbnailUrl'];\n\n  constructor(public dataService: DataServiceService) { }\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n\n  ngOnInit() {\n    this.RenderDataTable();\n  }\n\n  RenderDataTable() {\n    this.dataService.GetAllPhotos()\n      .subscribe(\n      res => {\n        this.MyDataSource = new MatTableDataSource();\n        this.MyDataSource.data = res;\n        this.MyDataSource.paginator = this.paginator;\n        console.log(this.MyDataSource.data);\n      },\n      error => {\n        console.log('There was an error while retrieving Photos !!!' + error);\n      });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Angular-Datatable/src/app/withpagination/withpagination.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/app/withsorting/withsorting.component.css\n// module id = ../../../../../src/app/withsorting/withsorting.component.css\n// module chunks = main","module.exports = \"<mat-card>\\n    <div class=\\\"alert alert-info\\\">\\n        <strong>Angular Material DataTable With Sorting</strong>\\n    </div>\\n    <div class=\\\"example-container mat-elevation-z8\\\">\\n        <mat-table #Table [dataSource]=\\\"MyDataSource\\\" matSort>\\n\\n            <!-- For ID -->\\n            <ng-container matColumnDef=\\\"id\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.id}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Post ID -->\\n            <ng-container matColumnDef=\\\"userId\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> User ID </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.userId}} </mat-cell>\\n            </ng-container>\\n\\n            <!-- For Name -->\\n            <ng-container matColumnDef=\\\"title\\\">\\n                <mat-header-cell *matHeaderCellDef mat-sort-header> Title </mat-header-cell>\\n                <mat-cell *matCellDef=\\\"let post\\\"> {{post.title}} </mat-cell>\\n            </ng-container>\\n\\n            <mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></mat-header-row>\\n            <mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></mat-row>\\n        </mat-table>\\n\\n        <!-- To paginate between pages with search -->\\n        <mat-paginator #paginator [pageSize]=\\\"10\\\" [pageSizeOptions]=\\\"[5, 10, 20]\\\">\\n        </mat-paginator>\\n    </div>\\n</mat-card>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// C:/Angular-Datatable/src/app/withsorting/withsorting.component.html\n// module id = ../../../../../src/app/withsorting/withsorting.component.html\n// module chunks = main","import { Component, OnInit ,ViewChild} from '@angular/core';\nimport { MatTableDataSource,MatPaginator,MatSort } from '@angular/material';\nimport { DataServiceService } from '../service/data-service.service';\nimport { BehaviorSubject } from 'rxjs/BehaviorSubject';\nimport { Observable } from 'rxjs/Observable';\n\n@Component({\n  selector: 'app-withsorting',\n  templateUrl: './withsorting.component.html',\n  styleUrls: ['./withsorting.component.css']\n})\nexport class WithsortingComponent implements OnInit {\n\n  MyDataSource: any;\n  displayedColumns = ['id', 'userId','title'];\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n\n  constructor(public dataService: DataServiceService) { }\n\n  ngOnInit() {\n    this.RenderDataTable();\n  }\n\n  RenderDataTable() {\n    this.dataService.GetAllAlbums()\n      .subscribe(\n      res => {\n        this.MyDataSource = new MatTableDataSource();\n        this.MyDataSource.data = res;\n        this.MyDataSource.sort = this.sort;\n        this.MyDataSource.paginator = this.paginator;\n        console.log(this.MyDataSource.data);\n      },\n      error => {\n        console.log('There was an error while retrieving Albums !!!' + error);\n      });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// C:/Angular-Datatable/src/app/withsorting/withsorting.component.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// C:/Angular-Datatable/src/environments/environment.ts","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n\n\n\n// WEBPACK FOOTER //\n// C:/Angular-Datatable/src/main.ts"],"sourceRoot":"webpack:///"}